#ifndef _FSTDIC_H_
#define _FSTDIC_H_

#ifdef __cplusplus
extern "C" {
#endif

#define FSTDIC_FST_NAME     ".fst"		// essential
#define FSTDIC_INFO_NAME    ".info"		// essential
#define FSTDIC_RFST_NAME    ".rfst"		// optional (역방향 탐색을 위해)
#define FSTDIC_RINDEX_NAME  ".rbin"		// optional (역방향 탐색을 위해)
#define FSTDIC_LIST_NAME    ".bin"		// optional (패턴 매칭을 위해 / 사용하지 않는 경우, fstdic_GetInfo와 fstdic_GetInfos만 사용가능)

typedef struct {
	void	*fst;			// FST 구조체
	void	*info; // 정보파일 핸들
	void	*rfst;		 // 역방향 FST 구조체
	void	*rindex;		// 역방향 FST에 대한 정보 파일 인덱스
	void	*list; // 리스트(키) 파일 핸들
} FSTDICtRSC;

typedef struct {
	int		capacity; // 할당된 메모리의 크기
	int		count;	 // 저장된 key-value들의 수
	char	**keys;
	char	**values;
} FSTDICtSTORE;

extern FSTDICtRSC *fstdic_Open
(
	const char	*FileStemName // [input] 리소스 파일의 경로 (파일 stem명)
);

extern void fstdic_Close
(
	FSTDICtRSC	*Rsc
);

extern char *fstdic_GetInfo
(
	FSTDICtRSC *Rsc,
	const char *Key
);

extern int fstdic_GetInfos
(
	FSTDICtRSC	*Rsc,		// [input]
	const char	*Key,		// [input]
	char		**Values, // [output]
	int			MaxValue	// [input] Values의 최대 수
);

extern FSTDICtSTORE *fstdic_NewKeyValue
(
	int MaxKeyValue
);

extern void fstdic_FreeKeyValue
(
	FSTDICtSTORE *KeyValue
);

extern int fstdic_GetInfosWithPattern
(
	FSTDICtRSC	*Rsc,		// [input]
	const char	*Pattern,	// [input]
	FSTDICtSTORE	*KeyValue, // [output]
	int			MaxValue	// [input] Values의 최대 수
);

extern int fstdic_Build
(
	const char	*InputFileName, // [input]
	const char	*FileStem,		// [output]
	int			ReverseOn		 // [input] 역방향 FST 구축 여부 (1 : 구축)
);

#ifdef __cplusplus
}
#endif

#endif
